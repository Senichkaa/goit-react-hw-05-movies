{"version":3,"file":"static/js/412.6b5165e2.chunk.js","mappings":"8RAEaA,EAAYC,EAAAA,EAAAA,EAAH,sFAKTC,EAAgBD,EAAAA,EAAAA,EAAH,sF,SCgD1B,EA/CgB,WACd,OAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACRH,GAAU,GAEV,IAAMI,EAAQ,mCAAG,8GAEMC,EAAAA,EAAAA,IAAiBJ,GAFvB,OAEPK,EAFO,OAGbR,EAAQQ,EAAKT,MAHA,gDAKbU,QAAQC,MAAM,oBAAd,MALa,yBAObR,GAAU,GAPG,4EAAH,qDAWdI,GACD,GAAE,CAACH,KAGF,2BACGF,IAAU,SAACU,EAAA,EAAD,IACVZ,GACCA,EAAKa,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,UAClC,OACE,2BACE,gBACEC,IACEJ,EAAY,yCAC0BA,GAClC,8EAENK,IAAKJ,EACLK,MAAO,OAET,SAACxB,EAAD,UAAYmB,KACZ,UAACjB,EAAD,WAAe,cAAYmB,OAXpBD,EAcZ,MAGR,C,gFCnDYK,E,QAAgBxB,EAAAA,IAAH,8F,SCCbe,EAAS,WACpB,OACE,SAACS,EAAD,WACE,SAAC,KAAD,CACEC,OAAO,KACPF,MAAM,KACNG,UAAU,uBACVC,aAAc,CAAC,EACfC,aAAa,uBACbC,YAAY,UACZC,SAAS,aAIhB,C,mMCfKC,EAAW,+BACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACoBC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,uCAAoDC,EAApD,oBADpB,uBACKG,EADL,EACKA,KADL,kBAGIA,GAHJ,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,yFACoBH,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iCAA8CC,EAA9C,4DAAyGK,IAD7H,uBACKF,EADL,EACKA,KADL,kBAGIA,GAHJ,kEAMA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAmC/B,GAAnC,yFACoB2B,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BxB,EAA/B,oBAAkDyB,EAAlD,oBADpB,uBACKG,EADL,EACKA,KADL,kBAGIA,GAHJ,kEAMA,SAAexB,EAAtB,+CAAO,OAAP,oBAAO,WAAgCJ,GAAhC,yFACoB2B,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BxB,EAA/B,4BAA0DyB,EAA1D,oBADpB,uBACKG,EADL,EACKA,KADL,kBAGIA,GAHJ,kEAMA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAmChC,GAAnC,yFACoB2B,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BxB,EAA/B,4BAA0DyB,EAA1D,2BADpB,uBACKG,EADL,EACKA,KADL,kBAGIA,GAHJ,kE","sources":["components/Casting/Casting.styled.jsx","components/Casting/Casting.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/fetch-api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastActor = styled.p`\n  padding-left: 25px;\n  color: #4e4d4d;\n  font-size: 18px;\n`;\nexport const CastCharacter = styled.p`\n  padding-left: 25px;\n  color: #4e4d4d;\n  font-size: 18px;\n`;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { movieCastRequest } from 'components/fetch-api';\n\nimport { CastActor, CastCharacter } from './Casting.styled';\n\nconst Casting = () => {\n  const [cast, setCast] = useState(null);\n  const [loader, setLoader] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setLoader(true);\n\n    const fetching = async () => {\n      try {\n        const resp = await movieCastRequest(movieId);\n        setCast(resp.cast);\n      } catch (error) {\n        console.error('There is an error', error);\n      } finally {\n        setLoader(false);\n      }\n    };\n\n    fetching();\n  }, [movieId]);\n\n  return (\n    <div>\n      {loader && <Loader />}\n      {cast &&\n        cast.map(({ profile_path, name, id, character }) => {\n          return (\n            <li key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                    : 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700'\n                }\n                alt={name}\n                width={200}\n              />\n              <CastActor>{name}</CastActor>\n              <CastCharacter>Character: {character}</CastCharacter>\n            </li>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default Casting;\n","import styled from '@emotion/styled';\n\nexport const LoaderWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { ProgressBar } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderWrapper>\n      <ProgressBar\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"progress-bar-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"progress-bar-wrapper\"\n        borderColor=\"#F4442E\"\n        barColor=\"#51E5FF\"\n      />\n    </LoaderWrapper>\n  );\n};\n","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'f178f7ce976ed1c53f42d6d8f6a9420b'\n\nexport async function trendingRequest() {\n    const { data } = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}&language=en-US`,)\n    \n    return data;\n}\n\nexport async function searchMovieRequest(film) {\n    const { data } = await axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&include_adult=false&language=en-US&page=1&query=${film}`,)\n    \n    return data;\n}\n\nexport async function movieDetailsRequest(movieId) {\n    const { data } = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`,)\n    \n    return data;\n}\n\nexport async function movieCastRequest(movieId) {\n    const { data } = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,)\n    \n    return data;\n}\n\nexport async function movieReviewsRequest(movieId) {\n    const { data } = await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`,)\n    \n    return data\n}\n\n\n"],"names":["CastActor","styled","CastCharacter","useState","cast","setCast","loader","setLoader","movieId","useParams","useEffect","fetching","movieCastRequest","resp","console","error","Loader","map","profile_path","name","id","character","src","alt","width","LoaderWrapper","height","ariaLabel","wrapperStyle","wrapperClass","borderColor","barColor","BASE_URL","API_KEY","trendingRequest","axios","data","searchMovieRequest","film","movieDetailsRequest","movieReviewsRequest"],"sourceRoot":""}
{"version":3,"file":"static/js/875.ba7fa1dd.chunk.js","mappings":"4LAEaA,EAAS,WACpB,OACE,+BACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,UAAU,uBACVC,aAAc,CAAC,EACfC,aAAa,uBACbC,YAAY,UACZC,SAAS,aAIhB,C,+LCdKC,EAAW,+BACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACoBC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,uCAAoDC,EAApD,oBADpB,uBACKG,EADL,EACKA,KADL,kBAGIA,GAHJ,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,yFACoBH,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iCAA8CC,EAA9C,4DAAyGK,IAD7H,uBACKF,EADL,EACKA,KADL,kBAGIA,GAHJ,kEAMA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,yFACoBL,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BQ,EAA/B,oBAAkDP,EAAlD,oBADpB,uBACKG,EADL,EACKA,KADL,kBAGIA,GAHJ,kEAMA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAgCD,GAAhC,yFACoBL,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BQ,EAA/B,4BAA0DP,EAA1D,oBADpB,uBACKG,EADL,EACKA,KADL,kBAGIA,GAHJ,kEAMA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAmCF,GAAnC,yFACoBL,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BQ,EAA/B,4BAA0DP,EAA1D,2BADpB,uBACKG,EADL,EACKA,KADL,kBAGIA,GAHJ,kE,gKC5BMO,EAAY,WACvB,OACE,2BACE,yBACE,SAAC,KAAD,CAAMC,GAAG,OAAT,SAAgB,YAElB,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,gBAI1B,ECyDD,EA1DqB,WAAO,IAAD,IACzB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACTX,GAAYY,EAAAA,EAAAA,MAAZZ,QACFa,GAAWC,EAAAA,EAAAA,QAAM,oBAACJ,EAASK,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAmBhD,OAjBAC,EAAAA,EAAAA,YAAU,WACRR,GAAU,GAEV,IAAMS,EAAQ,mCAAG,8GAEMnB,EAAAA,EAAAA,IAAoBC,GAF1B,OAEPmB,EAFO,OAGbZ,EAASY,GAHI,gDAKbC,QAAQC,MAAM,oBAAd,MALa,yBAObZ,GAAU,GAPG,4EAAH,qDAWdS,GACD,GAAE,CAAClB,KAGF,4BACE,SAAC,KAAD,CAAMI,GAAIS,EAASS,QAAnB,SAA4B,SAC3Bd,IAAU,SAACxB,EAAA,EAAD,IACVsB,IACC,2BACGA,EAAMiB,cACL,gBACEC,IAAG,yCAAoClB,EAAMiB,aAC7CE,IAAKnB,EAAMoB,MACXxC,MAAO,OAGX,4BACE,wBAAKoB,EAAMoB,SACX,0BAAI,WAASC,KAAKC,MAA2B,GAArBtB,EAAMuB,cAAmB,QACjD,wBAAI,cACJ,uBAAIvB,EAAMwB,YACV,wBAAI,YACJ,uBAAIxB,EAAMyB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,cAIrD,4BACE,wBAAI,gBACJ,SAAChC,EAAD,QAEF,SAAC,EAAAiC,SAAD,CAAUC,UAAU,yBAAK,YAAzB,UACE,SAAC,KAAD,QAIP,C","sources":["components/Loader/Loader.jsx","components/fetch-api.js","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import { ProgressBar } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <>\n      <ProgressBar\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"progress-bar-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"progress-bar-wrapper\"\n        borderColor=\"#F4442E\"\n        barColor=\"#51E5FF\"\n      />\n    </>\n  );\n};\n","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'f178f7ce976ed1c53f42d6d8f6a9420b'\n\nexport async function trendingRequest() {\n    const { data } = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}&language=en-US`,)\n    \n    return data;\n}\n\nexport async function searchMovieRequest(film) {\n    const { data } = await axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&include_adult=false&language=en-US&page=1&query=${film}`,)\n    \n    return data;\n}\n\nexport async function movieDetailsRequest(movieId) {\n    const { data } = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`,)\n    \n    return data;\n}\n\nexport async function movieCastRequest(movieId) {\n    const { data } = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,)\n    \n    return data;\n}\n\nexport async function movieReviewsRequest(movieId) {\n    const { data } = await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`,)\n    \n    return data\n}\n\n\n","import { Link } from 'react-router-dom';\nexport const MovieInfo = () => {\n  return (\n    <ul>\n      <li>\n        <Link to=\"cast\">Cast</Link>\n      </li>\n      <li>\n        <Link to=\"reviews\">Reviews</Link>\n      </li>\n    </ul>\n  );\n};\n","import React from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { Outlet } from 'react-router-dom';\nimport { movieDetailsRequest } from 'components/fetch-api';\nimport { Suspense } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\n\nconst MovieDetails = () => {\n  const [query, setQuery] = useState(null);\n  const [loader, setLoader] = useState(false);\n  const location = useLocation();\n  const { movieId } = useParams();\n  const backLink = useRef(location.state?.form ?? '/movies');\n\n  useEffect(() => {\n    setLoader(true);\n\n    const fetching = async () => {\n      try {\n        const resp = await movieDetailsRequest(movieId);\n        setQuery(resp);\n      } catch (error) {\n        console.error('There is an error', error);\n      } finally {\n        setLoader(false);\n      }\n    };\n\n    fetching();\n  }, [movieId]);\n\n  return (\n    <div>\n      <Link to={backLink.current}>Back</Link>\n      {loader && <Loader />}\n      {query && (\n        <div>\n          {query.poster_path && (\n            <img\n              src={`https://image.tmdb.org/t/p/w500${query.poster_path}`}\n              alt={query.title}\n              width={300}\n            />\n          )}\n          <div>\n            <h2>{query.title}</h2>\n            <h2>Rating: {Math.round(query.vote_average * 10)}%</h2>\n            <h3>Overview</h3>\n            <p>{query.overview}</p>\n            <h3>Genres</h3>\n            <p>{query.genres.map(genre => genre.name).join(',')}</p>\n          </div>\n        </div>\n      )}\n      <div>\n        <h2>Additional</h2>\n        <MovieInfo />\n      </div>\n      <Suspense fallback={<div>Loading</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Loader","height","width","ariaLabel","wrapperStyle","wrapperClass","borderColor","barColor","BASE_URL","API_KEY","trendingRequest","axios","data","searchMovieRequest","film","movieDetailsRequest","movieId","movieCastRequest","movieReviewsRequest","MovieInfo","to","useState","query","setQuery","loader","setLoader","location","useLocation","useParams","backLink","useRef","state","form","useEffect","fetching","resp","console","error","current","poster_path","src","alt","title","Math","round","vote_average","overview","genres","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}